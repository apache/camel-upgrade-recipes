#
# Copyright 2025 the original author or authors.
# <p>
# Licensed under the Moderne Source Available License (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
# <p>
# https://docs.moderne.io/licensing/moderne-source-available-license
# <p>
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#

---
type: specs.openrewrite.org/v1beta/recipe
name: org.apache.camel.upgrade.internal.OpenRewriteRecipeBestPractices
displayName: OpenRewrite recipe best practices
description: Best practices for OpenRewrite recipe development.
recipeList:
  - org.apache.camel.upgrade.internal.JavaRecipeBestPractices
  - org.apache.camel.upgrade.internal.RecipeTestingBestPractices
  - org.openrewrite.java.recipes.RecipeNullabilityBestPractices
  - org.openrewrite.java.recipes.ExamplesExtractor
  - org.openrewrite.java.OrderImports
  - org.openrewrite.java.RemoveUnusedImports
  - org.openrewrite.java.SimplifySingleElementAnnotation
  - org.openrewrite.java.format.EmptyNewlineAtEndOfFile
  - org.openrewrite.java.format.RemoveTrailingWhitespace
  - org.openrewrite.staticanalysis.CompareEnumsWithEqualityOperator
  - org.openrewrite.staticanalysis.InlineVariable
  - org.openrewrite.staticanalysis.LambdaBlockToExpression
  - org.openrewrite.staticanalysis.MissingOverrideAnnotation
  - org.openrewrite.staticanalysis.OperatorWrap:
      wrapOption: EOL
  - org.openrewrite.staticanalysis.RemoveRedundantNullCheckBeforeInstanceof
  - org.openrewrite.staticanalysis.RemoveUnusedLocalVariables
  - org.openrewrite.staticanalysis.RemoveUnusedPrivateFields
  - org.openrewrite.staticanalysis.RemoveUnusedPrivateMethods
  #- org.openrewrite.staticanalysis.UnnecessaryThrows
  - org.openrewrite.staticanalysis.UnwrapElseAfterReturn
  - org.openrewrite.staticanalysis.UseDiamondOperator
---
type: specs.openrewrite.org/v1beta/recipe
name: org.apache.camel.upgrade.internal.JavaRecipeBestPractices
displayName: Java Recipe best practices
description: Best practices for Java recipe development.
preconditions:
  - org.openrewrite.java.search.FindTypes:
      fullyQualifiedTypeName: org.openrewrite.Recipe
      checkAssignability: true
recipeList:
  - org.openrewrite.java.recipes.BlankLinesAroundFieldsWithAnnotations
  - org.openrewrite.java.recipes.CorrectlySpacedDescriptions
  - org.openrewrite.java.recipes.ExecutionContextParameterName
  - org.openrewrite.java.recipes.IsLiteralNullRecipe
  - org.openrewrite.java.recipes.MissingOptionExample
  - org.openrewrite.java.recipes.NoMutableStaticFieldsInRecipes
  - org.openrewrite.java.recipes.RecipeEqualsAndHashCodeCallSuper
  - org.openrewrite.java.recipes.UseTreeRandomId
  - org.openrewrite.java.recipes.migrate.RemoveTraitsUsageRecipes
  - org.openrewrite.staticanalysis.NeedBraces
  - org.openrewrite.staticanalysis.RemoveSystemOutPrintln
  - org.openrewrite.java.RemoveAnnotation:
      annotationPattern: '@org.openrewrite.NlsRewrite.DisplayName'
  - org.openrewrite.java.RemoveAnnotation:
      annotationPattern: '@org.openrewrite.NlsRewrite.Description'
---
type: specs.openrewrite.org/v1beta/recipe
name: org.apache.camel.upgrade.internal.RecipeTestingBestPractices
displayName: Recipe testing best practices
description: Best practices for testing recipes.
preconditions:
  - org.openrewrite.java.search.FindTypes:
      fullyQualifiedTypeName: org.openrewrite.test.RewriteTest
      checkAssignability: true
recipeList:
  - org.openrewrite.java.migrate.util.ReplaceStreamCollectWithToList:
      convertToList: true
#  - org.openrewrite.java.recipes.RewriteTestClassesShouldNotBePublic
  - org.openrewrite.java.recipes.SelectRecipeExamples
  - org.openrewrite.java.recipes.SingleDocumentExample
  - org.openrewrite.java.recipes.ReorderTestMethods
  - org.openrewrite.java.recipes.ReplaceNullWithDoesNotExist
  - org.openrewrite.java.recipes.SourceSpecTextBlockNewLine
  - org.openrewrite.java.recipes.SourceSpecTextBlockIndentation
  - org.openrewrite.java.testing.cleanup.RemoveTestPrefix
#  - org.openrewrite.java.testing.cleanup.TestsShouldNotBePublic
  - org.openrewrite.staticanalysis.NeedBraces
  - org.openrewrite.staticanalysis.RemoveSystemOutPrintln
  - org.openrewrite.staticanalysis.ReorderAnnotations
  - org.openrewrite.java.UseStaticImport:
      methodPattern: 'org.openrewrite..Assertions *(..)'
---
type: specs.openrewrite.org/v1beta/recipe
name: org.openrewrite.java.recipes.RecipeNullabilityBestPractices
displayName: Recipe nullability best practices
description: Use JSpecify nullable annotations; drop Nonnull annotations; use `NullMarked` on `package-info.java` instead.
recipeList:
  - org.openrewrite.java.jspecify.MigrateFromOpenRewriteAnnotations
  - org.openrewrite.java.RemoveAnnotation:
      annotationPattern: '@org.jetbrains.annotations.NotNull'
  - org.openrewrite.java.RemoveAnnotation:
      annotationPattern: '@javax.annotation.Nonnull'
  - org.openrewrite.java.RemoveAnnotation:
      annotationPattern: '@jakarta.annotation.Nonnull'
  - org.openrewrite.java.jspecify.MigrateToJspecify
  - org.openrewrite.staticanalysis.AnnotateNullableMethods
  - org.openrewrite.staticanalysis.NullableOnMethodReturnType